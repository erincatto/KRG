//-------------------------------------------------------------------------
// This is an auto-generated file - DO NOT edit
//-------------------------------------------------------------------------

#include "E:\Git\KRG\Code\Engine\Animation\_Module\_AutoGenerated\1735893070.h"

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatRemapNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatRemapNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatRemapNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatRemapNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatRemapNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatClampNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatClampNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatClampNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatClampNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatClampNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatAbsNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatAbsNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatAbsNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatAbsNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatAbsNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatEaseNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatEaseNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatEaseNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatEaseNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatEaseNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// Enum Helper: KRG::Animation::Graph::FloatMathNode::Operator
//-------------------------------------------------------------------------

namespace KRG
{
    namespace TypeSystem
    {
        namespace EnumHelpers
        {
            void EnumHelper_KRG_Animation_Graph_FloatMathNode_Operator::RegisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                TypeSystem::TypeInfo typeInfo;
                typeInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatMathNode::Operator" );
                typeInfo.m_size = sizeof( KRG::Animation::Graph::FloatMathNode::Operator );
                typeInfo.m_alignment = alignof( KRG::Animation::Graph::FloatMathNode::Operator );
                typeRegistry.RegisterType( typeInfo );

                TypeSystem::EnumInfo enumInfo;
                enumInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatMathNode::Operator" );
                enumInfo.m_underlyingType = TypeSystem::CoreTypes::Uint8;
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Add" ), 0 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Sub" ), 1 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Div" ), 3 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Mul" ), 2 ) );

                typeRegistry.RegisterEnum( enumInfo );
            }

            void EnumHelper_KRG_Animation_Graph_FloatMathNode_Operator::UnregisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                auto const ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatMathNode::Operator" );
                typeRegistry.UnregisterType( ID );
                typeRegistry.UnregisterEnum( ID );
            }
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatMathNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatMathNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatMathNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatMathNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatMathNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// Enum Helper: KRG::Animation::Graph::FloatComparisonNode::Comparison
//-------------------------------------------------------------------------

namespace KRG
{
    namespace TypeSystem
    {
        namespace EnumHelpers
        {
            void EnumHelper_KRG_Animation_Graph_FloatComparisonNode_Comparison::RegisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                TypeSystem::TypeInfo typeInfo;
                typeInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatComparisonNode::Comparison" );
                typeInfo.m_size = sizeof( KRG::Animation::Graph::FloatComparisonNode::Comparison );
                typeInfo.m_alignment = alignof( KRG::Animation::Graph::FloatComparisonNode::Comparison );
                typeRegistry.RegisterType( typeInfo );

                TypeSystem::EnumInfo enumInfo;
                enumInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatComparisonNode::Comparison" );
                enumInfo.m_underlyingType = TypeSystem::CoreTypes::Uint8;
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "LessThanEqual" ), 1 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "NearEqual" ), 2 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "LessThan" ), 4 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "GreaterThanEqual" ), 0 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "GreaterThan" ), 3 ) );

                typeRegistry.RegisterEnum( enumInfo );
            }

            void EnumHelper_KRG_Animation_Graph_FloatComparisonNode_Comparison::UnregisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                auto const ID = TypeSystem::TypeID( "KRG::Animation::Graph::FloatComparisonNode::Comparison" );
                typeRegistry.UnregisterType( ID );
                typeRegistry.UnregisterEnum( ID );
            }
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatComparisonNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatComparisonNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatComparisonNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatComparisonNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatComparisonNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatRangeComparisonNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatRangeComparisonNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatRangeComparisonNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatRangeComparisonNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatRangeComparisonNode::Settings>::StaticTypeHelper;
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Graph::FloatSwitchNode::Settings
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Graph::FloatSwitchNode::Settings::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Graph::FloatSwitchNode::Settings>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Graph::FloatSwitchNode::Settings> TTypeHelper<KRG::Animation::Graph::FloatSwitchNode::Settings>::StaticTypeHelper;
        }
    }
}
