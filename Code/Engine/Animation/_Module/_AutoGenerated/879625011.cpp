//-------------------------------------------------------------------------
// This is an auto-generated file - DO NOT edit
//-------------------------------------------------------------------------

#include "D:\Kruger\Code\Engine\Animation\_Module\_AutoGenerated\879625011.h"

//-------------------------------------------------------------------------
// Enum Helper: KRG::Animation::Events::FootstepEvent::Phase
//-------------------------------------------------------------------------

namespace KRG
{
    namespace TypeSystem
    {
        namespace EnumHelpers
        {
            void EnumHelper_KRG_Animation_Events_FootstepEvent_Phase::RegisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                TypeSystem::TypeInfo typeInfo;
                typeInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Events::FootstepEvent::Phase" );
                typeInfo.m_size = sizeof( KRG::Animation::Events::FootstepEvent::Phase );
                typeInfo.m_alignment = alignof( KRG::Animation::Events::FootstepEvent::Phase );
                typeRegistry.RegisterType( typeInfo );

                TypeSystem::EnumInfo enumInfo;
                enumInfo.m_ID = TypeSystem::TypeID( "KRG::Animation::Events::FootstepEvent::Phase" );
                enumInfo.m_underlyingType = TypeSystem::CoreTypes::Int32;
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "LeftFootDown" ), 0 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "RightFootDown" ), 2 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "LeftFootPassing" ), 1 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "RightFootPassing" ), 3 ) );

                typeRegistry.RegisterEnum( enumInfo );
            }

            void EnumHelper_KRG_Animation_Events_FootstepEvent_Phase::UnregisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                auto const ID = TypeSystem::TypeID( "KRG::Animation::Events::FootstepEvent::Phase" );
                typeRegistry.UnregisterType( ID );
                typeRegistry.UnregisterEnum( ID );
            }
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Animation::Events::FootstepEvent
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Animation::Events::FootstepEvent::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Animation::Events::FootstepEvent>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Animation::Events::FootstepEvent> TTypeHelper<KRG::Animation::Events::FootstepEvent>::StaticTypeHelper;
        }
    }
}
