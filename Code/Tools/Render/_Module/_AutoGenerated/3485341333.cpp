//-------------------------------------------------------------------------
// This is an auto-generated file - DO NOT edit
//-------------------------------------------------------------------------

#include "D:\Kruger\Code\Tools\Render\_Module\_AutoGenerated\3485341333.h"

//-------------------------------------------------------------------------
// Enum Helper: KRG::Render::ShaderType
//-------------------------------------------------------------------------

namespace KRG
{
    namespace TypeSystem
    {
        namespace EnumHelpers
        {
            void EnumHelper_KRG_Render_ShaderType::RegisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                TypeSystem::TypeInfo typeInfo;
                typeInfo.m_ID = TypeSystem::TypeID( "KRG::Render::ShaderType" );
                typeInfo.m_size = sizeof( KRG::Render::ShaderType );
                typeInfo.m_alignment = alignof( KRG::Render::ShaderType );
                typeRegistry.RegisterType( typeInfo );

                TypeSystem::EnumInfo enumInfo;
                enumInfo.m_ID = TypeSystem::TypeID( "KRG::Render::ShaderType" );
                enumInfo.m_underlyingType = TypeSystem::CoreTypes::Uint8;
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Pixel" ), 2 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Geometry" ), 1 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Hull" ), 3 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Compute" ), 4 ) );
                enumInfo.m_constants.insert( TPair<StringID, int64>( StringID( "Vertex" ), 0 ) );

                typeRegistry.RegisterEnum( enumInfo );
            }

            void EnumHelper_KRG_Render_ShaderType::UnregisterEnum( TypeSystem::TypeRegistry& typeRegistry )
            {
                auto const ID = TypeSystem::TypeID( "KRG::Render::ShaderType" );
                typeRegistry.UnregisterType( ID );
                typeRegistry.UnregisterEnum( ID );
            }
        }
    }
}

//-------------------------------------------------------------------------
// TypeHelper: KRG::Render::ShaderResourceDescriptor
//-------------------------------------------------------------------------

namespace KRG
{
    TypeSystem::TypeInfo const* KRG::Render::ShaderResourceDescriptor::s_pTypeInfo = nullptr;
    namespace TypeSystem
    {
        namespace TypeHelpers
        {
            IRegisteredType const* TTypeHelper<KRG::Render::ShaderResourceDescriptor>::s_pDefaultTypeInstancePtr = nullptr;

            TTypeHelper<KRG::Render::ShaderResourceDescriptor> TTypeHelper<KRG::Render::ShaderResourceDescriptor>::StaticTypeHelper;
        }
    }
}
