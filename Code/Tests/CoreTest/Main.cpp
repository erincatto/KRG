#include "System/TypeSystem/TypeRegistry.h"
#include "Applications/Shared/ApplicationGlobalState.h"
#include "Applications/Shared/_AutoGenerated/EngineTypeRegistration.h"
#include "Engine/Physics/PhysicsLayers.h"

//-------------------------------------------------------------------------

using namespace KRG;
using namespace KRG::Physics;

//-------------------------------------------------------------------------

enum class SomeEnum : uint8
{
    a,
    b,
    c
};

inline uint32 operator | ( uint32 a, SomeEnum rhs )
{
    return a | ( 1u << static_cast<uint8>( rhs ) );
}

inline uint32 operator | ( SomeEnum lhs, SomeEnum rhs )
{
    return ( 1u << static_cast<uint8>( lhs ) ) | ( 1u << static_cast<uint8>( rhs ) );
}

int main( int argc, char *argv[] )
{
    {
        KRG::ApplicationGlobalState State;
        TypeSystem::TypeRegistry typeRegistry;
        AutoGenerated::RegisterTypes( typeRegistry );

        //-------------------------------------------------------------------------

        uint32 field = SomeEnum::a | SomeEnum::b;
       
        //-------------------------------------------------------------------------

        AutoGenerated::UnregisterTypes( typeRegistry );
    }

    return 0;
}
