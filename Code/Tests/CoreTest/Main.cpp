#include "System/TypeSystem/TypeRegistry.h"
#include "Applications/Shared/ApplicationGlobalState.h"
#include "Applications/Shared/_AutoGenerated/EngineTypeRegistration.h"
//#include "Applications/Shared/_AutoGenerated/ToolsTypeRegistration.h"
#include <iostream>
#include "Tools/Core/TypeSystem/toolTypeInstance.h"
#include "Game/Core/TestComponent.h"
#include "Tools/Entity/ToolEntityCollectionConverter.h"
#include "Tools/Entity/ToolEntityCollection.h"
#include <directxmath.h>
#include "System/Entity/EntityDescriptors.h"
#include "System/Core/Types/UUID.h"
#include "Game/Core/PlayerController/DefaultPlayerController.h"
#include "System/Core/Serialization/BinaryArchive.h"

#include "Engine/Render/Material/RenderMaterial.h"
#include "System/Core/Types/Event.h"
#include "System/Core/Memory/MemoryStreamHelpers.h"
#include "System/Core/Time/Timers.h"
#include "System/Core/Time/TimeStamp.h"
#include "Tools/Core/Thirdparty/subprocess/subprocess.h"
#include "../Platform/Platform_Win32.h"

//-------------------------------------------------------------------------

using namespace KRG;

//-------------------------------------------------------------------------

int main( int argc, char *argv[] )
{
    {
        KRG::ApplicationGlobalState State;
        TypeSystem::TypeRegistry typeRegistry;
        AutoGenerated::RegisterTypes( typeRegistry );

        //-------------------------------------------------------------------------

        //-------------------------------------------------------------------------

        AutoGenerated::UnregisterTypes( typeRegistry );
    }

    return 0;
}
