#pragma once

#include "Engine.h"
#include "Win32/Application_Win32.h"
#include "Tools/Editor/EditorToolkit.h"
#include "_AutoGenerated/ToolsTypeRegistration.h"

//-------------------------------------------------------------------------

namespace KRG
{
    class ToolkitHost : public Engine
    {
        friend class EditorApplication;

    public:

        using Engine::Engine;

        // Deletes active editor
        virtual ~ToolkitHost()
        {
            KRG::Delete( m_pActiveToolkit );
        }

        // Takes ownership of the active editor
        inline void SetActiveEditor( EditorToolkit* pActiveEditor )
        {
            KRG_ASSERT( pActiveEditor != nullptr );
            m_pDevelopmentTools = pActiveEditor;
            m_pActiveToolkit = pActiveEditor;
        }

        virtual void RegisterTypes() override
        {
            AutoGenerated::Tools::RegisterTypes( *m_pTypeRegistry );
        }

        virtual void UnregisterTypes() override
        {
            AutoGenerated::Tools::UnregisterTypes( *m_pTypeRegistry );
        }

        // User flags
        inline void SetUserFlags( uint64 flags ) { m_pActiveToolkit->SetUserFlags( flags ); }
        inline uint64 GetUserFlags() const { return m_pActiveToolkit->GetUserFlags(); }

    private:

        EditorToolkit*                  m_pActiveToolkit = nullptr;
    };

    //-------------------------------------------------------------------------

    class EditorApplication : public Win32Application
    {

    public:

        EditorApplication( HINSTANCE hInstance );

    private:

        virtual bool ReadSettings( int32 argc, char** argv ) override;
        virtual bool Initialize();
        virtual bool Shutdown();

        virtual LRESULT WndProcess( HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam );

        bool EnsureResourceServerIsRunning();
        virtual bool ApplicationLoop() override;

    private:

        ToolkitHost                      m_editorHost;
    };
}